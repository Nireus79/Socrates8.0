version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: socrates-db
    environment:
      POSTGRES_DB: ${DB_NAME:-socrates_db}
      POSTGRES_USER: ${DB_USER:-socrates}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-socrates123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-socrates}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - socrates-network
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./Socrates-8.0/backend
      dockerfile: Dockerfile
    container_name: socrates-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${DB_USER:-socrates}:${DB_PASSWORD:-socrates123}@postgres:5432/${DB_NAME:-socrates_db}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-your-super-secret-key-change-in-production}
      JWT_ALGORITHM: HS256
      JWT_EXPIRATION_HOURS: 24
      CLAUDE_API_KEY: ${CLAUDE_API_KEY:-}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000,http://localhost:5173}
    volumes:
      - ./Socrates-8.0/backend/src:/app/src
      - ./Socrates-8.0/backend/.env:/app/.env
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - socrates-network
    restart: unless-stopped
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./Socrates-8.0/frontend
      dockerfile: Dockerfile
    container_name: socrates-frontend
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:8000}
      REACT_APP_WS_URL: ${REACT_APP_WS_URL:-ws://localhost:8000}
      ENVIRONMENT: ${ENVIRONMENT:-development}
    volumes:
      - ./Socrates-8.0/frontend/src:/app/src
      - ./Socrates-8.0/frontend/public:/app/public
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - socrates-network
    restart: unless-stopped

  # Optional: Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: socrates-redis
    environment:
      REDIS_DISABLE_COMMANDS: FLUSHDB,FLUSHALL
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - socrates-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  socrates-network:
    driver: bridge
